package gui;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDragEvent;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.dnd.DropTargetEvent;
import java.awt.dnd.DropTargetListener;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.charset.Charset;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.NumberFormatter;

import main.FileDecoder;
import main.FileEncodingDetector;
import main.FileHandler;
import main.FileSelect;

/**
 *
 * @author Nick Lee
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    
    public MainFrame() {
        initFileSelect();
        initFileDecoder();
        initFileEncodingDetector();
        initFileHandler();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        buttongroupExt = new javax.swing.ButtonGroup();
        dialogSelectEncoding = new javax.swing.JDialog();

        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEncoding = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        dialogAuto = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        labelDetectedencoding = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        textareaDetectedencoding = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        dialogBrute = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textareaBrute = new javax.swing.JTextArea();
        jButton13 = new javax.swing.JButton();
        dialogSearchResult = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        labelFilescontaining = new javax.swing.JLabel();
        subPanelFilesScroll1 = new javax.swing.JScrollPane();
        tableFiles1 = new javax.swing.JTable();
        jButton16 = new javax.swing.JButton();
        jMenuItem1 = new javax.swing.JMenuItem();
        buttongroupTargetfolder = new javax.swing.ButtonGroup();
        buttongroupDetectencoding = new javax.swing.ButtonGroup();
        buttongroupFileext = new javax.swing.ButtonGroup();
        buttongroupRemanefiles = new javax.swing.ButtonGroup();
        buttongroupSearchfilecontent = new javax.swing.ButtonGroup();
        dialogAbout = new javax.swing.JDialog();
        jButton1 = new javax.swing.JButton();
        panelFiles = new javax.swing.JPanel();
        subPanelTool = new javax.swing.JPanel();
        buttonOF = new javax.swing.JButton();
        buttonRemove = new javax.swing.JButton();
        buttonRemoveAll = new javax.swing.JButton();
        buttonSelectAll = new javax.swing.JCheckBox();
        panelFileFilters = new javax.swing.JPanel();
        lableExt = new javax.swing.JLabel();
        radiobuttonAll = new javax.swing.JRadioButton();
        radioButtonOther = new javax.swing.JRadioButton();
        textFieldExt = new javax.swing.JTextField();
        checkBoxHiddenFiles = new javax.swing.JCheckBox();
        checkboxFileName = new javax.swing.JCheckBox();
        textFieldFileName = new javax.swing.JTextField();
        checkboxRegex = new javax.swing.JCheckBox();
        textfieldRegex = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        panelCard = new javax.swing.JPanel();
        subPanelDragDrop = new javax.swing.JPanel();
        panelDragDrop2 = new javax.swing.JPanel();
        labelDropFile = new javax.swing.JLabel();
        labelUploadIcon = new javax.swing.JLabel();
        labelOr = new javax.swing.JLabel();
        buttonBrowseFile = new javax.swing.JButton();
        panelDragDrop3 = new javax.swing.JPanel();
        panelDragDrop1 = new javax.swing.JPanel();
        subPanelFilesScroll = new javax.swing.JScrollPane();
        tableFiles = new javax.swing.JTable();
        panelFunctions = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        subPanelDecode = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboboxSourceEncoding = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboboxTargetEncoding = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        buttonDecode = new javax.swing.JButton();
        textfieldTargetfolder = new javax.swing.JTextField();
        buttonChoosetarget = new javax.swing.JButton();
        radiobuttonTargetfolder = new javax.swing.JRadioButton();
        radiobuttonOverwriteall = new javax.swing.JRadioButton();
        subPanelDetectEncoding = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        buttonSelectEncoding = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        buttonChoosesample = new javax.swing.JButton();
        labelSamplefile = new javax.swing.JLabel();
        radioAuto = new javax.swing.JRadioButton();
        radioBrute = new javax.swing.JRadioButton();
        jSeparator3 = new javax.swing.JSeparator();
        buttonDetectencoding = new javax.swing.JButton();
        labelSamplesize = new javax.swing.JLabel();
        labelChoosesample = new javax.swing.JLabel();
        textfieldSamplesize = new JFormattedTextField(setNumberformatter(textfieldSamplesize));
        jScrollPane6 = new javax.swing.JScrollPane();
        textareaSelectedencodings = new javax.swing.JTextArea();
        subPanelFileHandling = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jRadioButton7 = new javax.swing.JRadioButton();
        radiobuttonOtherChangeExt = new javax.swing.JRadioButton();
        textfieldChangeext = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        textfieldTargetChangeExt = new javax.swing.JTextField();
        buttonChangeFileExt = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        radiobuttonRenameall = new javax.swing.JRadioButton();
        radiobuttonReplace = new javax.swing.JRadioButton();
        textfieldRenamereplace = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        textfieldRenametarget = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jButton12 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        checkboxRenameregex = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jRadioButton11 = new javax.swing.JRadioButton();
        radiofilesearchregex = new javax.swing.JRadioButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        textareaSearchfilecontent = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuEdit = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        dialogSelectEncoding.setTitle("Select Encodings");
        dialogSelectEncoding.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dialogSelectEncoding.setFocusCycleRoot(false);
        dialogSelectEncoding.setModal(true);
        dialogSelectEncoding.setPreferredSize(new java.awt.Dimension(310, 500));
        dialogSelectEncoding.setSize(new java.awt.Dimension(310, 500));
        dialogSelectEncoding.setType(java.awt.Window.Type.POPUP);

        tableEncoding.setAutoCreateRowSorter(true);
        tableEncoding.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableEncoding);
        if (tableEncoding.getColumnModel().getColumnCount() > 0) {
            tableEncoding.getColumnModel().getColumn(0).setResizable(false);
            tableEncoding.getColumnModel().getColumn(1).setMinWidth(50);
            tableEncoding.getColumnModel().getColumn(1).setPreferredWidth(30);
            tableEncoding.getColumnModel().getColumn(1).setMaxWidth(50);
        }
        setTableEncoding();

        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 148, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        javax.swing.GroupLayout dialogSelectEncodingLayout = new javax.swing.GroupLayout(dialogSelectEncoding.getContentPane());
        dialogSelectEncoding.getContentPane().setLayout(dialogSelectEncodingLayout);
        dialogSelectEncodingLayout.setHorizontalGroup(
            dialogSelectEncodingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialogSelectEncodingLayout.setVerticalGroup(
            dialogSelectEncodingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dialogSelectEncoding.getAccessibleContext().setAccessibleDescription("");
        dialogSelectEncoding.getAccessibleContext().setAccessibleParent(this);
        dialogSelectEncoding.setLocationRelativeTo(this);

        dialogAuto.setTitle("Result");
        dialogAuto.setAlwaysOnTop(true);
        dialogAuto.setModal(true);
        dialogAuto.setType(java.awt.Window.Type.POPUP);

        jLabel9.setText("Suggested source Encoding:");

        labelDetectedencoding.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelDetectedencoding.setText("jLabel10");

        jButton8.setText("help");

        textareaDetectedencoding.setEditable(false);
        textareaDetectedencoding.setColumns(20);
        textareaDetectedencoding.setRows(5);
        jScrollPane3.setViewportView(textareaDetectedencoding);

        jLabel11.setText("Sample Text");

        jButton11.setText("OK");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel11)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelDetectedencoding)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton11)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(labelDetectedencoding)
                    .addComponent(jButton8))
                .addGap(7, 7, 7)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialogAutoLayout = new javax.swing.GroupLayout(dialogAuto.getContentPane());
        dialogAuto.getContentPane().setLayout(dialogAutoLayout);
        dialogAutoLayout.setHorizontalGroup(
            dialogAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialogAutoLayout.setVerticalGroup(
            dialogAutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dialogAuto.pack();
        dialogAuto.setLocationRelativeTo(null);

        dialogBrute.setTitle("Result");
        dialogBrute.setAlwaysOnTop(true);
        dialogBrute.setModal(true);
        dialogBrute.setType(java.awt.Window.Type.POPUP);

        textareaBrute.setEditable(false);
        textareaBrute.setColumns(20);
        textareaBrute.setRows(5);
        jScrollPane4.setViewportView(textareaBrute);

        jButton13.setText("OK");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton13)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton13)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout dialogBruteLayout = new javax.swing.GroupLayout(dialogBrute.getContentPane());
        dialogBrute.getContentPane().setLayout(dialogBruteLayout);
        dialogBruteLayout.setHorizontalGroup(
            dialogBruteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialogBruteLayout.setVerticalGroup(
            dialogBruteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dialogBrute.pack();
        dialogBrute.setLocationRelativeTo(null);

        dialogSearchResult.setTitle("Result");
        dialogSearchResult.setAlwaysOnTop(true);
        dialogSearchResult.setModal(true);
        dialogSearchResult.setType(java.awt.Window.Type.POPUP);

        jButton15.setText("Cancel");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        labelFilescontaining.setText("Files containing : \"asdfasdfasdfdfasd\"");

        tableFiles1.setAutoCreateRowSorter(true);
        tableFiles1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Date modified", "Size", " "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableFiles1.setToolTipText("");
        tableFiles1.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tableFiles1.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tableFiles1.setShowGrid(false);
        tableFiles1.setShowHorizontalLines(true);
        tableFiles1.getTableHeader().setReorderingAllowed(false);
        subPanelFilesScroll1.setViewportView(tableFiles1);
        tableFiles1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (tableFiles1.getColumnModel().getColumnCount() > 0) {
            tableFiles1.getColumnModel().getColumn(0).setPreferredWidth(300);
            tableFiles1.getColumnModel().getColumn(1).setPreferredWidth(50);
            tableFiles1.getColumnModel().getColumn(2).setPreferredWidth(150);
            tableFiles1.getColumnModel().getColumn(3).setPreferredWidth(50);
            tableFiles1.getColumnModel().getColumn(4).setResizable(false);
            tableFiles1.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        jButton16.setText("Open");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subPanelFilesScroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton15))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(labelFilescontaining)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton16)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFilescontaining)
                    .addComponent(jButton16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subPanelFilesScroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addContainerGap())
        );

        javax.swing.GroupLayout dialogSearchResultLayout = new javax.swing.GroupLayout(dialogSearchResult.getContentPane());
        dialogSearchResult.getContentPane().setLayout(dialogSearchResultLayout);
        dialogSearchResultLayout.setHorizontalGroup(
            dialogSearchResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialogSearchResultLayout.setVerticalGroup(
            dialogSearchResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dialogSearchResult.pack();
        dialogSearchResult.setLocationRelativeTo(null);

        jMenuItem1.setText("jMenuItem1");

        jButton1.setText("Source code: https://github.com/nicolaslee2000/File-Decoder.git");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogAboutLayout = new javax.swing.GroupLayout(dialogAbout.getContentPane());
        dialogAbout.getContentPane().setLayout(dialogAboutLayout);
        dialogAboutLayout.setHorizontalGroup(
            dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        dialogAboutLayout.setVerticalGroup(
            dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAboutLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        dialogAbout.pack();
        dialogAbout.setLocationRelativeTo(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("File Decoder\n");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(530, 550));

        buttonOF.setText("Open File..");
        buttonOF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOFActionPerformed(evt);
            }
        });

        buttonRemove.setText("Remove");
        buttonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveActionPerformed(evt);
            }
        });

        buttonRemoveAll.setText("Remove All");
        buttonRemoveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveAllActionPerformed(evt);
            }
        });

        buttonSelectAll.setText("Select All");
        buttonSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout subPanelToolLayout = new javax.swing.GroupLayout(subPanelTool);
        subPanelTool.setLayout(subPanelToolLayout);
        subPanelToolLayout.setHorizontalGroup(
            subPanelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subPanelToolLayout.createSequentialGroup()
                .addComponent(buttonOF)
                .addGap(34, 34, 34)
                .addComponent(buttonRemove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonRemoveAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonSelectAll)
                .addContainerGap())
        );
        subPanelToolLayout.setVerticalGroup(
            subPanelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subPanelToolLayout.createSequentialGroup()
                .addGroup(subPanelToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOF)
                    .addComponent(buttonRemoveAll)
                    .addComponent(buttonRemove)
                    .addComponent(buttonSelectAll))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelFileFilters.setBorder(javax.swing.BorderFactory.createTitledBorder("File filters\n"));

        lableExt.setText("Extension:");

        buttongroupExt.add(radiobuttonAll);
        radiobuttonAll.setSelected(true);
        radiobuttonAll.setText("All");
        radiobuttonAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobuttonAllActionPerformed(evt);
            }
        });

        buttongroupExt.add(radioButtonOther);
        radioButtonOther.setText("Other:");
        radioButtonOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonOtherActionPerformed(evt);
            }
        });

        textFieldExt.setForeground(java.awt.Color.lightGray);
        textFieldExt.setText("txt");
        textFieldExt.setToolTipText("");
        textFieldExt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textFieldExtFocusGained(evt);
            }
        });
        textFieldExt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldExtActionPerformed(evt);
            }
        });

        checkBoxHiddenFiles.setSelected(true);
        checkBoxHiddenFiles.setText("Hidden files");
        checkBoxHiddenFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxHiddenFilesActionPerformed(evt);
            }
        });

        checkboxFileName.setText("File name contains:");
        checkboxFileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxFileNameActionPerformed(evt);
            }
        });

        textFieldFileName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textFieldFileNameFocusGained(evt);
            }
        });
        textFieldFileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFileNameActionPerformed(evt);
            }
        });

        checkboxRegex.setText("Regex script");
        checkboxRegex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxRegexActionPerformed(evt);
            }
        });

        textfieldRegex.setForeground(java.awt.Color.lightGray);
        textfieldRegex.setText("ex: \\\\D[a-zA-Z]");
        textfieldRegex.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textfieldRegexFocusGained(evt);
            }
        });
        textfieldRegex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldRegexActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout panelFileFiltersLayout = new javax.swing.GroupLayout(panelFileFilters);
        panelFileFilters.setLayout(panelFileFiltersLayout);
        panelFileFiltersLayout.setHorizontalGroup(
            panelFileFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFileFiltersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lableExt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFileFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radiobuttonAll)
                    .addGroup(panelFileFiltersLayout.createSequentialGroup()
                        .addComponent(radioButtonOther)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldExt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(panelFileFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFileFiltersLayout.createSequentialGroup()
                        .addComponent(checkboxFileName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldFileName))
                    .addComponent(checkBoxHiddenFiles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFileFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFileFiltersLayout.createSequentialGroup()
                        .addComponent(checkboxRegex)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(textfieldRegex))
                .addContainerGap())
        );
        panelFileFiltersLayout.setVerticalGroup(
            panelFileFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFileFiltersLayout.createSequentialGroup()
                .addGroup(panelFileFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFileFiltersLayout.createSequentialGroup()
                        .addGroup(panelFileFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lableExt)
                            .addComponent(radiobuttonAll)
                            .addComponent(checkBoxHiddenFiles)
                            .addComponent(checkboxRegex))
                        .addGroup(panelFileFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelFileFiltersLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelFileFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radioButtonOther)
                                    .addComponent(textFieldExt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkboxFileName)
                                    .addComponent(textFieldFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFileFiltersLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textfieldRegex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelCard.setLayout(new java.awt.CardLayout());

        subPanelDragDrop.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        subPanelDragDrop.setToolTipText("");

        panelDragDrop2.setForeground(new java.awt.Color(255, 255, 255));

        labelDropFile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelDropFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDropFile.setText("Drag&drop files here");

        labelUploadIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/dropfilesicon.png"))); // NOI18N

        labelOr.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelOr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelOr.setText("or");
        labelOr.setFocusable(false);
        labelOr.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        buttonBrowseFile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonBrowseFile.setForeground(new java.awt.Color(51, 153, 255));
        buttonBrowseFile.setText("Browse Files");
        buttonBrowseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDragDrop2Layout = new javax.swing.GroupLayout(panelDragDrop2);
        panelDragDrop2.setLayout(panelDragDrop2Layout);
        panelDragDrop2Layout.setHorizontalGroup(
            panelDragDrop2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDragDrop2Layout.createSequentialGroup()
                .addGroup(panelDragDrop2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDragDrop2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelDropFile, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE))
                    .addGroup(panelDragDrop2Layout.createSequentialGroup()
                        .addGroup(panelDragDrop2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDragDrop2Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(labelUploadIcon))
                            .addGroup(panelDragDrop2Layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(labelOr, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDragDrop2Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(buttonBrowseFile)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelDragDrop2Layout.setVerticalGroup(
            panelDragDrop2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDragDrop2Layout.createSequentialGroup()
                .addComponent(labelUploadIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelDropFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelOr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonBrowseFile)
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout panelDragDrop3Layout = new javax.swing.GroupLayout(panelDragDrop3);
        panelDragDrop3.setLayout(panelDragDrop3Layout);
        panelDragDrop3Layout.setHorizontalGroup(
            panelDragDrop3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 165, Short.MAX_VALUE)
        );
        panelDragDrop3Layout.setVerticalGroup(
            panelDragDrop3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelDragDrop1Layout = new javax.swing.GroupLayout(panelDragDrop1);
        panelDragDrop1.setLayout(panelDragDrop1Layout);
        panelDragDrop1Layout.setHorizontalGroup(
            panelDragDrop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );
        panelDragDrop1Layout.setVerticalGroup(
            panelDragDrop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout subPanelDragDropLayout = new javax.swing.GroupLayout(subPanelDragDrop);
        subPanelDragDrop.setLayout(subPanelDragDropLayout);
        subPanelDragDropLayout.setHorizontalGroup(
            subPanelDragDropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subPanelDragDropLayout.createSequentialGroup()
                .addComponent(panelDragDrop1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDragDrop2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDragDrop3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        subPanelDragDropLayout.setVerticalGroup(
            subPanelDragDropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelDragDrop2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelDragDrop1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelDragDrop3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panelCard.add(subPanelDragDrop, "cardDragDrop");

        tableFiles.setAutoCreateRowSorter(true);
        tableFiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Date modified", "Size", " "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableFiles.setToolTipText("");
        tableFiles.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tableFiles.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tableFiles.setShowGrid(false);
        tableFiles.setShowHorizontalLines(true);
        tableFiles.getTableHeader().setReorderingAllowed(false);
        subPanelFilesScroll.setViewportView(tableFiles);
        tableFiles.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (tableFiles.getColumnModel().getColumnCount() > 0) {
            tableFiles.getColumnModel().getColumn(0).setPreferredWidth(300);
            tableFiles.getColumnModel().getColumn(1).setPreferredWidth(50);
            tableFiles.getColumnModel().getColumn(2).setPreferredWidth(150);
            tableFiles.getColumnModel().getColumn(3).setPreferredWidth(50);
            tableFiles.getColumnModel().getColumn(4).setResizable(false);
            tableFiles.getColumnModel().getColumn(4).setPreferredWidth(20);
        }
        tableFiles.getModel().addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent e){
                updateSelectAllButton();
            }
        });

        panelCard.add(subPanelFilesScroll, "cardFile");

        javax.swing.GroupLayout panelFilesLayout = new javax.swing.GroupLayout(panelFiles);
        panelFiles.setLayout(panelFilesLayout);
        panelFilesLayout.setHorizontalGroup(
            panelFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subPanelTool, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFileFilters, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelFilesLayout.setVerticalGroup(
            panelFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFilesLayout.createSequentialGroup()
                .addComponent(subPanelTool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCard, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelFileFilters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        addDropDrag(panelCard);

        subPanelDecode.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Source Encoding");

        comboboxSourceEncoding.setPrototypeDisplayValue("ISO-0000");
        setComboboxEncoding(comboboxSourceEncoding, "Select...");
        comboboxSourceEncoding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxSourceEncodingActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/downarrow.png"))); // NOI18N

        jLabel3.setText("Target Encoding");

        comboboxTargetEncoding.setPrototypeDisplayValue("ISO-0000");
        setComboboxEncoding(comboboxTargetEncoding, null);
        comboboxTargetEncoding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxTargetEncodingActionPerformed(evt);
            }
        });
        comboboxTargetEncoding.setSelectedItem((Object) "UTF-8");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(0, 41, Short.MAX_VALUE))
                            .addComponent(comboboxSourceEncoding, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboboxTargetEncoding, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboboxSourceEncoding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboboxTargetEncoding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 18, Short.MAX_VALUE)))
                .addContainerGap())
        );

        buttonDecode.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        buttonDecode.setText("Decode");
        buttonDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDecodeActionPerformed(evt);
            }
        });

        textfieldTargetfolder.setText(System.getProperty("user.home") + "\\Desktop\\decoded_files");
        textfieldTargetfolder.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textfieldTargetfolderFocusLost(evt);
            }
        });
        textfieldTargetfolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldTargetfolderActionPerformed(evt);
            }
        });

        buttonChoosetarget.setText("Choose...");
        buttonChoosetarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChoosetargetActionPerformed(evt);
            }
        });

        buttongroupTargetfolder.add(radiobuttonTargetfolder);
        radiobuttonTargetfolder.setSelected(true);
        radiobuttonTargetfolder.setText("Create copies at");
        radiobuttonTargetfolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobuttonTargetfolderActionPerformed(evt);
            }
        });

        buttongroupTargetfolder.add(radiobuttonOverwriteall);
        radiobuttonOverwriteall.setText("Overwrite all");
        radiobuttonOverwriteall.setToolTipText("");
        radiobuttonOverwriteall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobuttonOverwriteallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(textfieldTargetfolder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonChoosetarget))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(radiobuttonTargetfolder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radiobuttonOverwriteall)
                        .addGap(0, 171, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiobuttonTargetfolder)
                    .addComponent(radiobuttonOverwriteall))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonChoosetarget)
                    .addComponent(textfieldTargetfolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout subPanelDecodeLayout = new javax.swing.GroupLayout(subPanelDecode);
        subPanelDecode.setLayout(subPanelDecodeLayout);
        subPanelDecodeLayout.setHorizontalGroup(
            subPanelDecodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subPanelDecodeLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        subPanelDecodeLayout.setVerticalGroup(
            subPanelDecodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Decode", subPanelDecode);

        subPanelDetectEncoding.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        buttonSelectEncoding.setText("Select Encodings:");
        buttonSelectEncoding.setEnabled(false);
        buttonSelectEncoding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectEncodingActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/HelpButtonIcon.png"))); // NOI18N
        jButton5.setToolTipText("<html>It is impossible to know the exact type of encoding used to create a document unless explicitly being told. \n<br>Select automatic detection for possible character encoding of the sample file. If failed to detect encoding,\n<br> select brute force and test sample with multiple encodings to see which is the correct one.");
        jButton5.setBorder(null);
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);

        buttonChoosesample.setText("Choose File:");
        buttonChoosesample.setEnabled(false);
        buttonChoosesample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChoosesampleActionPerformed(evt);
            }
        });

        labelSamplefile.setEnabled(false);

        buttongroupDetectencoding.add(radioAuto);
        radioAuto.setText("Automatic");
        radioAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAutoActionPerformed(evt);
            }
        });

        buttongroupDetectencoding.add(radioBrute);
        radioBrute.setText("Brute force");
        radioBrute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBruteActionPerformed(evt);
            }
        });

        buttonDetectencoding.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        buttonDetectencoding.setText("Test");
        buttonDetectencoding.setEnabled(false);
        buttonDetectencoding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDetectencodingActionPerformed(evt);
            }
        });

        labelSamplesize.setText("Sample size:");
        labelSamplesize.setEnabled(false);

        labelChoosesample.setText("Choose test sample:");
        labelChoosesample.setEnabled(false);

        textfieldSamplesize.setText("100");
        textfieldSamplesize.setEnabled(false);

        textareaSelectedencodings.setColumns(10);
        textareaSelectedencodings.setRows(5);
        textareaSelectedencodings.setEnabled(false);
        jScrollPane6.setViewportView(textareaSelectedencodings);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonSelectEncoding)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelChoosesample, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(buttonChoosesample)
                                            .addComponent(labelSamplesize))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(textfieldSamplesize, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(buttonDetectencoding, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(labelSamplefile, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(radioAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioBrute, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioAuto)
                    .addComponent(radioBrute)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(labelChoosesample)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonChoosesample)
                            .addComponent(labelSamplefile))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelSamplesize)
                                    .addComponent(textfieldSamplesize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(buttonDetectencoding, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(buttonSelectEncoding)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout subPanelDetectEncodingLayout = new javax.swing.GroupLayout(subPanelDetectEncoding);
        subPanelDetectEncoding.setLayout(subPanelDetectEncodingLayout);
        subPanelDetectEncodingLayout.setHorizontalGroup(
            subPanelDetectEncodingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        subPanelDetectEncodingLayout.setVerticalGroup(
            subPanelDetectEncodingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Detect Encoding", subPanelDetectEncoding);

        subPanelFileHandling.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Change files extensions");

        buttongroupFileext.add(jRadioButton7);
        jRadioButton7.setSelected(true);
        jRadioButton7.setText("All");

        buttongroupFileext.add(radiobuttonOtherChangeExt);
        radiobuttonOtherChangeExt.setText("Other:");
        radiobuttonOtherChangeExt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobuttonOtherChangeExtActionPerformed(evt);
            }
        });

        textfieldChangeext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldChangeextActionPerformed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/downarrow.png"))); // NOI18N

        jLabel14.setText("target:");

        buttonChangeFileExt.setText("Change");
        buttonChangeFileExt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChangeFileExtActionPerformed(evt);
            }
        });

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jRadioButton7)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textfieldTargetChangeExt, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                    .addComponent(radiobuttonOtherChangeExt)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textfieldChangeext, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(buttonChangeFileExt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radiobuttonOtherChangeExt)
                            .addComponent(textfieldChangeext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(textfieldTargetChangeExt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonChangeFileExt)))
                .addContainerGap())
        );

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Rename files");

        buttongroupRemanefiles.add(radiobuttonRenameall);
        radiobuttonRenameall.setText("Rename all");
        radiobuttonRenameall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobuttonRenameallActionPerformed(evt);
            }
        });

        buttongroupRemanefiles.add(radiobuttonReplace);
        radiobuttonReplace.setSelected(true);
        radiobuttonReplace.setText("Replace:");
        radiobuttonReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobuttonReplaceActionPerformed(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/downarrow.png"))); // NOI18N

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton12.setText("Rename");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel17.setText("With:");

        checkboxRenameregex.setText("Regex?");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(radiobuttonReplace)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textfieldRenamereplace))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textfieldRenametarget))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jButton12))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(checkboxRenameregex)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15))
                    .addComponent(radiobuttonRenameall))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radiobuttonRenameall)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radiobuttonReplace)
                            .addComponent(textfieldRenamereplace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkboxRenameregex))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textfieldRenametarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(15, 15, 15)
                        .addComponent(jButton12))
                    .addComponent(jSeparator5))
                .addContainerGap())
        );

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setText("Search file content");

        jButton14.setText("Search");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel19.setText("Search by:");

        buttongroupSearchfilecontent.add(jRadioButton11);
        jRadioButton11.setSelected(true);
        jRadioButton11.setText("Text");

        buttongroupSearchfilecontent.add(radiofilesearchregex);
        radiofilesearchregex.setText("Regex");

        textareaSearchfilecontent.setColumns(10);
        textareaSearchfilecontent.setLineWrap(true);
        textareaSearchfilecontent.setRows(2);
        textareaSearchfilecontent.setTabSize(3);
        textareaSearchfilecontent.setWrapStyleWord(true);
        jScrollPane5.setViewportView(textareaSearchfilecontent);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(radiofilesearchregex)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jRadioButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton14))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                        .addGap(11, 11, 11)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jRadioButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radiofilesearchregex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5)
                .addGap(12, 12, 12)
                .addComponent(jButton14)
                .addContainerGap())
        );

        javax.swing.GroupLayout subPanelFileHandlingLayout = new javax.swing.GroupLayout(subPanelFileHandling);
        subPanelFileHandling.setLayout(subPanelFileHandlingLayout);
        subPanelFileHandlingLayout.setHorizontalGroup(
            subPanelFileHandlingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subPanelFileHandlingLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        subPanelFileHandlingLayout.setVerticalGroup(
            subPanelFileHandlingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabbedPane.addTab("File Handling", subPanelFileHandling);

        javax.swing.GroupLayout panelFunctionsLayout = new javax.swing.GroupLayout(panelFunctions);
        panelFunctions.setLayout(panelFunctionsLayout);
        panelFunctionsLayout.setHorizontalGroup(
            panelFunctionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFunctionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane)
                .addContainerGap())
        );
        panelFunctionsLayout.setVerticalGroup(
            panelFunctionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFunctionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane))
        );

        menuFile.setText("File");
        menuBar.add(menuFile);

        menuEdit.setText("Edit");
        menuBar.add(menuEdit);

        jMenu1.setText("Help");

        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        menuBar.add(jMenu1);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelFunctions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelFunctions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Listeners">
    
    private void buttonOFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOFActionPerformed
        addFiles(getFilesFromFilechooser(true, JFileChooser.FILES_AND_DIRECTORIES));
    }//GEN-LAST:event_buttonOFActionPerformed
    
    private void buttonRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveAllActionPerformed
        removeFiles(fileSelect.getFiles()); 
    }//GEN-LAST:event_buttonRemoveAllActionPerformed

    private void buttonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveActionPerformed
        removeSelectedRows();
    }//GEN-LAST:event_buttonRemoveActionPerformed

    private void buttonBrowseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseFileActionPerformed
        addFiles(getFilesFromFilechooser(true, JFileChooser.FILES_AND_DIRECTORIES));
    }//GEN-LAST:event_buttonBrowseFileActionPerformed

    private void textFieldExtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldExtActionPerformed
        radioButtonOther.requestFocus();
        radioButtonOther.setSelected(true);
        fileSelect.setFilterExt(textFieldExt.getText());
        updateTable();
    }//GEN-LAST:event_textFieldExtActionPerformed

    private void checkboxRegexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxRegexActionPerformed
        if(checkboxRegex.isSelected()) {
            textfieldRegex.requestFocus();
            fileSelect.setFilterRegex(textfieldRegex.getText());
        } else {
            fileSelect.setFilterRegex(".*");
        }
        updateTable();
    }//GEN-LAST:event_checkboxRegexActionPerformed

    private void comboboxTargetEncodingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxTargetEncodingActionPerformed
        fileDecoder.setTargetCharset(Charset.forName((String)comboboxTargetEncoding.getSelectedItem()));
    }//GEN-LAST:event_comboboxTargetEncodingActionPerformed

    private void buttonDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDecodeActionPerformed
        setDecodeButton();
    }//GEN-LAST:event_buttonDecodeActionPerformed

    private void buttonSelectEncodingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectEncodingActionPerformed
        dialogSelectEncoding.setVisible(true);
    }//GEN-LAST:event_buttonSelectEncodingActionPerformed

    private void buttonDetectencodingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDetectencodingActionPerformed
        setDetectencodingButton();
    }//GEN-LAST:event_buttonDetectencodingActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        dialogBrute.setVisible(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void comboboxSourceEncodingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxSourceEncodingActionPerformed
        comboboxSourceEncoding.removeItemAt(0);
        fileDecoder.setSourceCharset(Charset.forName((String)comboboxSourceEncoding.getSelectedItem()));
    }//GEN-LAST:event_comboboxSourceEncodingActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        dialogSearchResult.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) tableFiles1.getModel();
        while(model.getRowCount()>0) {
            model.removeRow(0);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void buttonSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectAllActionPerformed
        boolean b = !IsSelectedAll();
        for(int i = 0; i < tableFiles.getRowCount(); i++){
            tableFiles.setValueAt(b, i , 4);
        }
    }//GEN-LAST:event_buttonSelectAllActionPerformed

    private void radiobuttonAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobuttonAllActionPerformed
        fileSelect.setFilterExt("");
        updateTable();
    }//GEN-LAST:event_radiobuttonAllActionPerformed

    private void radioButtonOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonOtherActionPerformed
        textFieldExt.requestFocus();
        fileSelect.setFilterExt(textFieldExt.getText());
        updateTable();
    }//GEN-LAST:event_radioButtonOtherActionPerformed

    private void textFieldExtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldExtFocusGained
        textFieldExt.selectAll();
    }//GEN-LAST:event_textFieldExtFocusGained

    private void checkBoxHiddenFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxHiddenFilesActionPerformed
        boolean hidden = checkBoxHiddenFiles.isSelected();
        fileSelect.setFilterHidden(hidden);
        updateTable();
    }//GEN-LAST:event_checkBoxHiddenFilesActionPerformed

    private void checkboxFileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxFileNameActionPerformed
        textFieldFileName.requestFocus();
        String text = checkboxFileName.isSelected() ? textFieldFileName.getText() : "";
        fileSelect.setFilterName(text);
        updateTable();
    }//GEN-LAST:event_checkboxFileNameActionPerformed

    private void textFieldFileNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldFileNameFocusGained
        textFieldFileName.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                update();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                update();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                update();
            }
            private void update() {
                if(checkboxFileName.isSelected()){
                    fileSelect.setFilterName(textFieldFileName.getText());
                updateTable();
                }
            }
        });
    }//GEN-LAST:event_textFieldFileNameFocusGained

    private void textFieldFileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFileNameActionPerformed
        checkboxFileName.requestFocus();
        checkboxFileName.setSelected(true);
    }//GEN-LAST:event_textFieldFileNameActionPerformed

    private void textfieldRegexFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textfieldRegexFocusGained
        textfieldRegex.selectAll();
    }//GEN-LAST:event_textfieldRegexFocusGained

    private void textfieldRegexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldRegexActionPerformed
        checkboxRegex.setSelected(true);
        checkboxRegex.requestFocus();
        fileSelect.setFilterRegex(textfieldRegex.getText());
        updateTable();
    }//GEN-LAST:event_textfieldRegexActionPerformed

    private void radiobuttonOverwriteallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobuttonOverwriteallActionPerformed
        if(!radiobuttonOverwriteall.isSelected()) {
            fileDecoder.setOverwrite(false);
            return;
        }
        if(!textfieldTargetfolder.isEnabled()) return;
        String msg = "Decoded files will overwrite original files.\nIf wrong encoding is selected, files\nmay be irreversibly damaged. Confirm?";
        int input = JOptionPane.showConfirmDialog(null, msg, "Overwrite", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        if(input == JOptionPane.OK_OPTION) {
            fileDecoder.setOverwrite(true);
            textfieldTargetfolder.setEnabled(false);
            buttonChoosetarget.setEnabled(false);
        } else {
            radiobuttonOverwriteall.setSelected(false);
            radiobuttonTargetfolder.setSelected(true);
        }
    }//GEN-LAST:event_radiobuttonOverwriteallActionPerformed

    private void textfieldTargetfolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldTargetfolderActionPerformed
        radiobuttonTargetfolder.requestFocus();
    }//GEN-LAST:event_textfieldTargetfolderActionPerformed

    private void radiobuttonTargetfolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobuttonTargetfolderActionPerformed
        textfieldTargetfolder.setEnabled(true);
        buttonChoosetarget.setEnabled(true);
        fileDecoder.setTargetFolder(new File(textfieldTargetfolder.getText()));
    }//GEN-LAST:event_radiobuttonTargetfolderActionPerformed

    private void textfieldTargetfolderFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textfieldTargetfolderFocusLost
        fileDecoder.setTargetFolder(new File(textfieldTargetfolder.getText()));
    }//GEN-LAST:event_textfieldTargetfolderFocusLost

    private void buttonChoosetargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChoosetargetActionPerformed
        fileChooser.setCurrentDirectory(new File(textfieldTargetfolder.getText()));
        for(File f : getFilesFromFilechooser(false, JFileChooser.DIRECTORIES_ONLY)) {
            textfieldTargetfolder.setText(f.getAbsolutePath());
            fileDecoder.setTargetFolder(f);
        }
    }//GEN-LAST:event_buttonChoosetargetActionPerformed

    private void radioAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAutoActionPerformed
        enableDetectencoding(true);
        fileDetector.setBruteforce(false);
    }//GEN-LAST:event_radioAutoActionPerformed

    private void radioBruteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBruteActionPerformed
       enableDetectencoding(true);
       fileDetector.setBruteforce(true);
    }//GEN-LAST:event_radioBruteActionPerformed

    private void buttonChoosesampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChoosesampleActionPerformed
        fileChooser.setCurrentDirectory(fileDetector.getSampleFile());
        for(File f : getFilesFromFilechooser(false, JFileChooser.FILES_ONLY)){
            labelSamplefile.setText(f.getAbsolutePath());
            fileDetector.setSampleFile(f);
        }
    }//GEN-LAST:event_buttonChoosesampleActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        HashSet<Charset> cs = new HashSet<>();
        for(int i =0; i < tableEncoding.getRowCount(); i++) {
            if((boolean)tableEncoding.getValueAt(i, 1)) cs.add(Charset.forName((String)tableEncoding.getValueAt(i, 0)));
        }
        if(cs.size()>10&&!fileDetector.isBruteforce()) {
            String msg = "For auto-detection, it is recommended that you select less than 10 encodings. Confirm?";
            int input = JOptionPane.showConfirmDialog(null, msg, "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
            if(input == JOptionPane.CANCEL_OPTION) return;
        }
        fileDetector.setCharsetsToBeTested(cs);
        String str = "";
        for(Charset c : fileDetector.getCharsetsToBeTested()) {
            str += c.displayName() + "\n";
        }
        textareaSelectedencodings.setText(str);
        dialogSelectEncoding.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dialogSelectEncoding.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        dialogAuto.setVisible(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void radiobuttonOtherChangeExtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobuttonOtherChangeExtActionPerformed
        textfieldChangeext.requestFocus();
    }//GEN-LAST:event_radiobuttonOtherChangeExtActionPerformed

    private void textfieldChangeextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldChangeextActionPerformed
        radioButtonOther.requestFocus();
        radioButtonOther.setSelected(true);
    }//GEN-LAST:event_textfieldChangeextActionPerformed

    private void buttonChangeFileExtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChangeFileExtActionPerformed
        setChangeFileExtButton();
    }//GEN-LAST:event_buttonChangeFileExtActionPerformed

    private void radiobuttonRenameallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobuttonRenameallActionPerformed
        String msg = "If more than one file of same name exists,\nonly first file will be renamed.\nConfirm?";
        int input = JOptionPane.showConfirmDialog(null, msg, "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        if(input == JOptionPane.CANCEL_OPTION) {
            radiobuttonReplace.setSelected(true);
            return;
        }
        textfieldRenamereplace.setEnabled(false);
        checkboxRenameregex.setEnabled(false);
    }//GEN-LAST:event_radiobuttonRenameallActionPerformed

    private void radiobuttonReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobuttonReplaceActionPerformed
        textfieldRenamereplace.requestFocus();
        textfieldRenamereplace.setEnabled(true);
        checkboxRenameregex.setEnabled(true);
    }//GEN-LAST:event_radiobuttonReplaceActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        setRenameButton();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        setSearchfilecontentButton();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileChooserActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        HashSet<File> files = new HashSet();
        for(int i = 0; i < tableFiles1.getRowCount(); i++) {
            if((boolean)tableFiles1.getValueAt(i, 4))
                files.add(new File((String)tableFiles.getValueAt(i, 0)));
        }
        Desktop desktop = Desktop.getDesktop();
        for(File f : files) {
            if(f.exists()&&Desktop.isDesktopSupported()) {
                try {
                    desktop.open(f);
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            } else {
            	JOptionPane.showMessageDialog(null, "UNSUPPORTED", null, JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        dialogAbout.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if (Desktop.isDesktopSupported()) {
            try {
                URI uri = new URI("https://github.com/nicolaslee2000/File-Decoder.git");
                Desktop.getDesktop().browse(uri);
            } catch (IOException e) {
                e.printStackTrace();
            } catch (URISyntaxException ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "UNSUPPORTED", null, JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    // </editor-fold>
    
    private void setSearchfilecontentButton(){
        if(textareaSearchfilecontent.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Fill in text to search!", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        labelFilescontaining.setText("Files containing: " + textareaSearchfilecontent.getText().strip());
        DefaultTableModel model = (DefaultTableModel) tableFiles1.getModel();
        HashSet<File> files  = new HashSet();
        try {
            files.addAll(getSelectedFiles());
        } catch(NullPointerException e) {
            return;
        }
        HashSet<File> resultfiles = fileHandler.searchFilecontent(files, textareaSearchfilecontent.getText().strip(), radiofilesearchregex.isSelected());
        for(File f : resultfiles){
            DateFormat df = new SimpleDateFormat("dd/MM/yy  HH:mm:ss");
                String name = f.getAbsolutePath();
                String type = f.getAbsolutePath().substring(f.getAbsolutePath().lastIndexOf("."));
                //shouldve chosen nio
                String date = df.format(f.lastModified());
                String size = f.length() < 1000 && f.length() != 0 ? 1 + "KB"  :  String.valueOf(f.length()/1000l) + "KB";
                model.addRow(new Object[]{name, type, date, size, true});
        }
        
        dialogSearchResult.setVisible(true);
    }
    
    private void setRenameButton() {
        if(radiobuttonReplace.isSelected()&&textfieldRenamereplace.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "Fill in what you want to replace with!", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(textfieldRenametarget.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Fill in target name!", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            System.out.println("TEXTFIELDREPLACE"+textfieldRenamereplace.getText().strip());
            fileHandler.rename(getSelectedFiles(), radiobuttonRenameall.isSelected() ? null : textfieldRenamereplace.getText().strip(), textfieldRenametarget.getText().strip(), checkboxRenameregex.isSelected());
        } catch(NullPointerException e) {
            return;
        }
        JOptionPane.showMessageDialog(null, "Complete!", "Complete!", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void setChangeFileExtButton() {
        if(textfieldChangeext.getText().strip().equals("")&&radiobuttonOtherChangeExt.isSelected() || textfieldTargetChangeExt.getText().strip().equals("")) {
            JOptionPane.showMessageDialog(null, "Choose extension!", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        HashSet<File> files = new HashSet<>();
        HashSet<File> tempf = new HashSet();
        try {
            files.addAll(getSelectedFiles());
        } catch(NullPointerException e) {
            return;
        }
        for(File f : files){
            if(!f.getName().contains("." + textfieldChangeext.getText().strip()))
                tempf.add(f);
        }
        files.removeAll(tempf);
        System.out.println("FILEs"+files);
        System.out.println("ext"+textfieldTargetChangeExt.getText().strip());
        fileHandler.changeExtension(files, textfieldTargetChangeExt.getText().strip());
         JOptionPane.showMessageDialog(null, "Complete!", "Complete!", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private HashSet<File> getSelectedFiles() {
        HashSet<File> files = new HashSet<>();
        for(int i = 0; i < tableFiles.getRowCount(); i++) {
            if((boolean)tableFiles.getValueAt(i, 4)) 
                files.add(new File((String)tableFiles.getValueAt(i, 0)));    
        }
        if(files.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Select files!", null, JOptionPane.WARNING_MESSAGE);
            throw new NullPointerException();
        }
        for(File f : files) {
            if(!f.exists()) {
                JOptionPane.showMessageDialog(null, f.getAbsolutePath()+" does not exist!", null, JOptionPane.WARNING_MESSAGE);
                files.clear();
                throw new NullPointerException();
            }
        }
        return files;
    }
    
    private void setTableEncoding() {
        DefaultTableModel model = (DefaultTableModel) tableEncoding.getModel();
        for(String s : fileDetector.getAvailableCharsets().keySet()) {
            model.addRow(new Object[]{s, s == "UTF-8"});
        }
        tableEncoding.getRowSorter().toggleSortOrder(1);
        tableEncoding.getRowSorter().toggleSortOrder(1);
    }
    
    private void setDetectencodingButton() {
        fileDetector.setSampleSize(Integer.valueOf(textfieldSamplesize.getText()));
        if(fileDetector.getCharsetsToBeTested()==null) {
            JOptionPane.showMessageDialog(null, "Select Encodings to Test!", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(!fileDetector.getSampleFile().exists()) {
            JOptionPane.showMessageDialog(null, "Select sample file!", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(fileDetector.isBruteforce()) {
            textareaBrute.setText(fileDetector.detectEncoding());
            dialogBrute.setVisible(true);
        } else {
            labelDetectedencoding.setText(fileDetector.detectEncoding());
            HashSet<Charset> c = new HashSet();
            c.add(Charset.forName(fileDetector.detectEncoding()));
            textareaDetectedencoding.setText(fileDetector.detectEncodingBruteforce(fileDetector.getSampleFile(), c, 100));
            dialogAuto.setVisible(true);
        }
    }
    
    private NumberFormatter setNumberformatter(JFormattedTextField textfield) {
        NumberFormat format = NumberFormat.getInstance();
        NumberFormatter formatter = new NumberFormatter(format);
        formatter.setValueClass(Integer.class);
        formatter.setMinimum(0);
        formatter.setMaximum(Integer.MAX_VALUE);
        formatter.setAllowsInvalid(false);
        formatter.setCommitsOnValidEdit(true);
        return formatter;
    }
    
    private void enableDetectencoding(boolean enable) {
        buttonSelectEncoding.setEnabled(enable);
        textareaSelectedencodings.setEnabled(enable);
        labelChoosesample.setEnabled(enable);
        buttonChoosesample.setEnabled(enable);
        labelSamplefile.setEnabled(enable);
        labelSamplesize.setEnabled(enable);
        textfieldSamplesize.setEnabled(enable);
        buttonDetectencoding.setEnabled(enable);
    }
    
    private void setDecodeButton() {

        if(fileDecoder.getSourceCharset() == null) {
            JOptionPane.showMessageDialog(null, "Select source Encoding!", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            fileDecoder.setSourceFiles(getSelectedFiles());
        } catch(NullPointerException e) {
            return;
        }
        fileDecoder.decode();
        JOptionPane.showMessageDialog(null, "Decoding complete!", "Complete!", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void setComboboxEncoding(JComboBox box, String defaulttext) {
        if(defaulttext!=null) box.addItem(defaulttext);
        fileDecoder.getAvailableCharsets().keySet().forEach(e -> box.addItem(e));
    }
    
    private void updateSelectAllButton() {
        buttonSelectAll.setSelected(IsSelectedAll());
    }
    
    private boolean IsSelectedAll() {
        for(int i = 0; i < tableFiles.getRowCount()-1; i++){
            if((boolean)tableFiles.getValueAt(i, 4) == false) {
                return false;
            }
        }
        return true;
    }
    
    private void removeSelectedRows() {
        HashSet<File> files = new HashSet<>();
        int rownum = tableFiles.getRowCount();
        for(int i : tableFiles.getSelectedRows()){
            files.add(new File((String)tableFiles.getValueAt(i, 0)));
            rownum = i < rownum ? i : rownum;
        }
        removeFiles(files);
        if(rownum==0) return;
        tableFiles.setRowSelectionInterval(rownum-1, rownum-1);
    }
    
    private HashSet<File> getFilesFromFilechooser(boolean multiSelect, int mode) {
        fileChooser.setMultiSelectionEnabled(multiSelect);
        fileChooser.setFileSelectionMode(mode);
        HashSet<File> set = new HashSet();
        if(fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            set.addAll(Set.of(fileChooser.getSelectedFiles()));
            if(!multiSelect) set.add(fileChooser.getSelectedFile());
        }
        fileChooser.setCurrentDirectory(fileChooser.getCurrentDirectory());
        return set;
    }
    
    private void updateCards() {
        String currentCard = fileSelect.getFiles().isEmpty() ? "cardDragDrop" : "cardFile";
        CardLayout c = (CardLayout) panelCard.getLayout();
        c.show(panelCard, currentCard);
    }
    private void updateSamplefile() {
        //calculation to divide file name label so that it does not go out of border
        if(tableFiles.getRowCount()>0) {
            File sample = new File((String) tableFiles.getValueAt(0, 0));
            String str = "<html><p style=\"width:170px\">"+sample.getAbsolutePath()+"</p></html>";
            fileDetector.setSampleFile(sample);
            labelSamplefile.setText(str);
        }
    }
    
    private void updateTable() {
        DefaultTableModel model = (DefaultTableModel) tableFiles.getModel();
        Set<File> newfiles = new HashSet();
        Set<File> deletedfiles = new HashSet();
        for(int i = 0; i < model.getRowCount(); i++) {
            deletedfiles.add(new File((String)model.getValueAt(i, 0)));
        }
        newfiles.addAll(fileSelect.getFiles());
        newfiles.removeAll(deletedfiles);
        deletedfiles.removeAll(fileSelect.getFiles());
        
        for(File f : newfiles){
            DateFormat df = new SimpleDateFormat("dd/MM/yy  HH:mm:ss");
                String name = f.getAbsolutePath();
                String type = f.getAbsolutePath().substring(f.getAbsolutePath().lastIndexOf("."));
                //shouldve chosen nio
                String date = df.format(f.lastModified());
                String size = f.length() < 1000 && f.length() != 0 ? 1 + "KB"  :  String.valueOf(f.length()/1000l) + "KB";
                model.addRow(new Object[]{name, type, date, size, true});
        }
        for(File f : deletedfiles){
            for(int i = 0; i < model.getRowCount(); i++) {
                    if(model.getValueAt(i, 0) == f.getAbsolutePath()) model.removeRow(i);
                }
        }
        //automatically displaying first file as sample file at detect encoding panel.
        updateSamplefile();
        updateCards();
    }
    
    private void addDropDrag(Component component) {
        new DropTarget(component, new DropTargetListener() {
            @Override
            public void dragEnter(DropTargetDragEvent dtde) {
                grayfilterPanelDragDrop(true);
                toFront();
            }

            @Override
            public void dragOver(DropTargetDragEvent dtde) {
            }

            @Override
            public void dropActionChanged(DropTargetDragEvent dtde) {
            }

            @Override
            public void dragExit(DropTargetEvent dte) {
                grayfilterPanelDragDrop(false);
            }

            @Override
            public void drop(DropTargetDropEvent dtde) {
                grayfilterPanelDragDrop(false);
                dtde.acceptDrop(DnDConstants.ACTION_COPY);
                Transferable transferable = dtde.getTransferable();
                DataFlavor[] flavors = transferable.getTransferDataFlavors();
                HashSet<File> files = new HashSet<>();
                for (DataFlavor f : flavors){
                    if(f.isFlavorJavaFileListType()){
                        try {
                            files.addAll((List)transferable.getTransferData(f));
                        } catch (UnsupportedFlavorException | IOException ex) {
                            ex.printStackTrace();
                        }
                    }
                }
                addFiles(files);
                dtde.dropComplete(true);
            }
        });
    }
    
    private void grayfilterPanelDragDrop(boolean b) {
        if(b){
            panelDragDrop1.setBackground(new Color(230, 230, 230));
            panelDragDrop2.setBackground(new Color(230, 230, 230));
            panelDragDrop3.setBackground(new Color(230, 230, 230));
            subPanelDragDrop.setBackground(new Color(230,230,230));
            
            labelDropFile.setEnabled(false);
            labelUploadIcon.setEnabled(false);
            labelOr.setEnabled(false);
            buttonBrowseFile.setEnabled(false);
        } else {
            panelDragDrop1.setBackground(new Color(242, 242, 242));
            panelDragDrop2.setBackground(new Color(242, 242, 242));
            panelDragDrop3.setBackground(new Color(242, 242, 242));
            subPanelDragDrop.setBackground(new Color(242,242,242));
            
            labelDropFile.setEnabled(true);
            labelUploadIcon.setEnabled(true);
            labelOr.setEnabled(true);
            buttonBrowseFile.setEnabled(true);
        }
    }
    
        private void removeFiles(HashSet<File> files) {
        Set<File> f = new HashSet<>();
        f.addAll(files);
        fileSelect.removeFiles(files);
        updateTable();
    }
    
    private void addFiles(HashSet<File> files) {
        fileSelect.addFiles(files);
        updateTable();
    }
    
    private void initFileDecoder() {
        fileDecoder = new FileDecoder();
        fileDecoder.setOverwrite(false);
        fileDecoder.setTargetCharset(Charset.forName("UTF-8"));
        fileDecoder.setTargetFolder(new File(System.getProperty("user.home"), "\\Desktop\\decoded_files"));
    }
    
    private void initFileSelect() {
        fileSelect = new FileSelect();
        fileSelect.setFilterExt("");
        fileSelect.setFilterHidden(true);
        fileSelect.setFilterName("");
        fileSelect.setFilterRegex(".*");
    }
        
    private void initFileEncodingDetector() {
        fileDetector = new FileEncodingDetector();
        fileDetector.setSampleSize(100);
    }
    
    private void initFileHandler() {
        fileHandler = new FileHandler();
    }
    
    /**
     * @param args the command line arguments
     */
//<editor-fold defaultstate="collapsed" desc="Variable declaration">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBrowseFile;
    private javax.swing.JButton buttonChangeFileExt;
    private javax.swing.JButton buttonChoosesample;
    private javax.swing.JButton buttonChoosetarget;
    private javax.swing.JButton buttonDecode;
    private javax.swing.JButton buttonDetectencoding;
    private javax.swing.JButton buttonOF;
    private javax.swing.JButton buttonRemove;
    private javax.swing.JButton buttonRemoveAll;
    private javax.swing.JCheckBox buttonSelectAll;
    private javax.swing.JButton buttonSelectEncoding;
    private javax.swing.ButtonGroup buttongroupDetectencoding;
    private javax.swing.ButtonGroup buttongroupExt;
    private javax.swing.ButtonGroup buttongroupFileext;
    private javax.swing.ButtonGroup buttongroupRemanefiles;
    private javax.swing.ButtonGroup buttongroupSearchfilecontent;
    private javax.swing.ButtonGroup buttongroupTargetfolder;
    private javax.swing.JCheckBox checkBoxHiddenFiles;
    private javax.swing.JCheckBox checkboxFileName;
    private javax.swing.JCheckBox checkboxRegex;
    private javax.swing.JCheckBox checkboxRenameregex;
    private javax.swing.JComboBox<String> comboboxSourceEncoding;
    private javax.swing.JComboBox<String> comboboxTargetEncoding;
    private javax.swing.JDialog dialogAbout;
    private javax.swing.JDialog dialogAuto;
    private javax.swing.JDialog dialogBrute;
    private javax.swing.JDialog dialogSearchResult;
    private javax.swing.JDialog dialogSelectEncoding;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton11;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel labelChoosesample;
    private javax.swing.JLabel labelDetectedencoding;
    private javax.swing.JLabel labelDropFile;
    private javax.swing.JLabel labelFilescontaining;
    private javax.swing.JLabel labelOr;
    private javax.swing.JLabel labelSamplefile;
    private javax.swing.JLabel labelSamplesize;
    private javax.swing.JLabel labelUploadIcon;
    private javax.swing.JLabel lableExt;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JPanel panelCard;
    private javax.swing.JPanel panelDragDrop1;
    private javax.swing.JPanel panelDragDrop2;
    private javax.swing.JPanel panelDragDrop3;
    private javax.swing.JPanel panelFileFilters;
    private javax.swing.JPanel panelFiles;
    private javax.swing.JPanel panelFunctions;
    private javax.swing.JRadioButton radioAuto;
    private javax.swing.JRadioButton radioBrute;
    private javax.swing.JRadioButton radioButtonOther;
    private javax.swing.JRadioButton radiobuttonAll;
    private javax.swing.JRadioButton radiobuttonOtherChangeExt;
    private javax.swing.JRadioButton radiobuttonOverwriteall;
    private javax.swing.JRadioButton radiobuttonRenameall;
    private javax.swing.JRadioButton radiobuttonReplace;
    private javax.swing.JRadioButton radiobuttonTargetfolder;
    private javax.swing.JRadioButton radiofilesearchregex;
    private javax.swing.JPanel subPanelDecode;
    private javax.swing.JPanel subPanelDetectEncoding;
    private javax.swing.JPanel subPanelDragDrop;
    private javax.swing.JPanel subPanelFileHandling;
    private javax.swing.JScrollPane subPanelFilesScroll;
    private javax.swing.JScrollPane subPanelFilesScroll1;
    private javax.swing.JPanel subPanelTool;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable tableEncoding;
    private javax.swing.JTable tableFiles;
    private javax.swing.JTable tableFiles1;
    private javax.swing.JTextField textFieldExt;
    private javax.swing.JTextField textFieldFileName;
    private javax.swing.JTextArea textareaBrute;
    private javax.swing.JTextArea textareaDetectedencoding;
    private javax.swing.JTextArea textareaSearchfilecontent;
    private javax.swing.JTextArea textareaSelectedencodings;
    private javax.swing.JTextField textfieldChangeext;
    private javax.swing.JTextField textfieldRegex;
    private javax.swing.JTextField textfieldRenamereplace;
    private javax.swing.JTextField textfieldRenametarget;
    private javax.swing.JFormattedTextField textfieldSamplesize;
    private javax.swing.JTextField textfieldTargetChangeExt;
    private javax.swing.JTextField textfieldTargetfolder;
    // End of variables declaration//GEN-END:variables
    
// </editor-fold>
    FileSelect fileSelect;
    FileDecoder fileDecoder;
    FileEncodingDetector fileDetector;
    FileHandler fileHandler;
}

